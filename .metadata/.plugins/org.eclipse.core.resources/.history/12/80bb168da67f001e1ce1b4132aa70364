package com.sonata.controller;

import java.util.List;

import org.apache.catalina.User;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.sonata.dto.ShoppingCartRequest;
import com.sonata.dto.ShoppingCartResponce;
import com.sonata.exception.UserNotFoundException;
import com.sonata.service.CartService;

@RestController
@RequestMapping("cart")
public class CartController {
	
	@Autowired
     private CartService cartser;
	
	
	
	@PostMapping("/{userId}/products")
	  public  ResponseEntity addProductToCart(
			  @PathVariable int userId,
			  @RequestBody List<ShoppingCartRequest> reqProductList) {
		ShoppingCartResponce responce=cartser.processAddRequest(userId,reqProductList);
		return new ResponseEntity(responce,HttpStatus.CREATED);
		
	}
	
	
	
	@GetMapping("/{userId}")
	public ResponseEntity getShoppingCart(@PathVariable int userId) {
	  return ResponseEntity.ok(cartser.getShoppingCart(userId));
    }

	
//	
//	 @GetMapping("/user/{userId}")
//	    public ResponseEntity<ShoppingCartResponce> getUserCart(@PathVariable int userId) {
//	        ShoppingCartResponce response = cartser.getUserCart(userId);
//
//	        if (response != null) {
//	            return new ResponseEntity<>(response, HttpStatus.OK);
//	        } else {
//	            return new ResponseEntity<>(HttpStatus.NOT_FOUND);
//	        }
//	 }
	       
	 
	 
	 
	 @GetMapping("/user/{userId}")
	    public ResponseEntity<List<ShoppingCartResponce>> getShoppingCart1(@PathVariable int userId) {
	        List<ShoppingCartResponce> cartResponse = cartser.getShoppingCart(userId);

	        if (cartResponse.isEmpty()) {
	            return ResponseEntity.noContent().build();
	        } else {
	            return ResponseEntity.ok(cartResponse);
	        }
	    } 
	
	 @PostMapping("/add/{userId}")
	 public ResponseEntity<ShoppingCartResponce> processAddToCart(
	         @PathVariable int userId,
	         @RequestBody List<ShoppingCartRequest> shoppingCartRequest) {
	     try {
	         ShoppingCartResponce response = cartser.processAddRequest(userId, shoppingCartRequest);
	         return new ResponseEntity<>(response, HttpStatus.OK);
	     } catch (UserNotFoundException e) {
	         return new ResponseEntity<>(HttpStatus.NOT_FOUND);
	     }
	 }

	 
	 
	
	

	
}
