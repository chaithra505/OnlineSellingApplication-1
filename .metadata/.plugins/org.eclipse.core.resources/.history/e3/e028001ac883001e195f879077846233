package com.sonata.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import com.sonata.dto.Product;
import com.sonata.dto.ShoppingCartRequest;
import com.sonata.dto.ShoppingCartResponce;
import com.sonata.dto.UserDto;
import com.sonata.model.Cart;
import com.sonata.repo.CartRepo;

import jakarta.ws.rs.NotFoundException;

@Service
public class CartService {

	@Autowired
	private CartRepo cartRepo;

	@Autowired
	private RestTemplate restTemplate;
	
	
	public ShoppingCartResponce addProductToCart(ShoppingCartRequest request) {  
        UserDto user = getUserDetails(request.getUserId());

        // Fetch product details from the product-service
        Product product = getProductDetails(request.getpId());

        // Check if user and product exist
        if (user == null || product == null) {
            throw new NotFoundException("User or product not found");
        }

        // Find or create the cart
        Cart cart = cartRepo.findByUserId(request.getUserId());

        if (cart == null) {
            // Create a new cart if it doesn't exist
            cart = new Cart();
            cart.setUserId(request.getUserId());
            // You may need to set other cart properties based on your requirements
        }

        // Add the product to the cart
        cart.addProduct(product, request.getQuantity());

        // Save the updated cart
        cartRepo.save(cart);

        // You may need to convert entities to DTOs or build a response based on your requirements
        // For simplicity, let's assume you have a response class named ShoppingCartResponce
        return new ShoppingCartResponce(
                cart.getUserId(),
                cart.getCartId(),
                cart.getTotalItems(),
                cart.getTotalCost(),
                cart.getProducts(),
                user,
                null, // Brand name is not present in the Cart entity
                null  // Category name is not present in the Cart entity
        );
    }

    private UserDto getUserDetails(int userId) {
        return restTemplate.getForObject("http://localhost:8081/user/dto/{uId}", UserDto.class, userId);
    }

    private Product getProductDetails(Long productId) {
        return restTemplate.getForObject("http://localhost:8082/product/product-details/{pId}", Product.class, productId);
    }
	
}