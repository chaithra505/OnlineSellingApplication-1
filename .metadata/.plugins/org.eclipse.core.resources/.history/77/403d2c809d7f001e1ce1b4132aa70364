package com.sonata.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.sonata.dto.ShoppingCartRequest;
import com.sonata.dto.ShoppingCartResponce;
import com.sonata.service.CartService;

@RestController
@RequestMapping("cart")
public class CartController {
	
	@Autowired
     private CartService cartser;
	
	
	
	@PostMapping("/{userId}/products")
	  public  ResponseEntity addProductToCart(
			  @PathVariable int userId,
			  @RequestBody List<ShoppingCartRequest> reqProductList) {
		ShoppingCartResponce responce=cartser.processAddRequest(userId,reqProductList);
		return new ResponseEntity(responce,HttpStatus.CREATED);
		
	}
	
	
	
	@GetMapping("/{userId}")
	public ResponseEntity getShoppingCart(@PathVariable int userId) {
	  return ResponseEntity.ok(cartser.getShoppingCart(userId));
    }

	
	
	 @GetMapping("/user/{userId}")
	    public ResponseEntity<ShoppingCartResponce> getUserCart(@PathVariable int userId) {
	        ShoppingCartResponce response = cartser.getUserCart(userId);

	        if (response != null) {
	            return new ResponseEntity<>(response, HttpStatus.OK);
	        } else {
	            return new ResponseEntity<>(HttpStatus.NOT_FOUND);
	        }
	        
	        
	      

	        @GetMapping("/get/{userId}")
	        public List<ShoppingCartResponce> getShoppingCart(@PathVariable int userId) {
	            return cartService.getShoppingCart(userId);
	        }

	        @GetMapping("/getUserCart/{userId}")
	        public ShoppingCartResponce getUserCart(@PathVariable int userId) {
	            return cartService.getUserCart(userId);
	        }
	    }
	
	
	

	
}
