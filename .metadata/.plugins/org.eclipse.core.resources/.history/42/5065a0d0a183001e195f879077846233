package com.sonata.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import com.sonata.dto.ShoppingCartDTO;
import com.sonata.dto.ShoppingCartResponce;
import com.sonata.exception.ProductNotFoundException;
import com.sonata.exception.UserNotFoundException;
import com.sonata.model.Cart;
import com.sonata.model.Product;
import com.sonata.model.UserDto;
import com.sonata.repo.CartRepo;

@Service
public class CartService {

    @Autowired
    private CartRepo cartRepo;

    @Autowired
    private RestTemplate restTemplate;

   

    public ShoppingCartResponce addProductToCart(UserDto userDto, int pId, int quantity) {
        // Check if the user exists
        ResponseEntity<UserDto> userResponse = restTemplate.getForEntity("http://localhost:8081/user/dto/{userId}", UserDto.class, userDto.getUserId());

        if (userResponse.getStatusCode() != HttpStatus.OK) {
            throw new UserNotFoundException("User not found");
        }

        // Find or create the cart
        Cart cart = cartRepo.findByUserId(userDto.getUserId());

        if (cart == null) {
            cart = new Cart();
            cart.setUserId(userDto.getUserId());
            
        }

        // Fetch product details from the product service
        ResponseEntity<Product> productResponse = restTemplate.getForEntity("http://localhost:8082/product/product-details/{pId}", Product.class, pId);

        if (productResponse.getStatusCode() != HttpStatus.OK) {
            throw new ProductNotFoundException("Product not found");
        }

        
        // Save the updated cart
        cartRepo.save(cart);

        // Convert entities to DTOs
        ShoppingCartDTO cartDTO = convertToShoppingCartDTO(cart);
        UserDto userDTO = convertToUserDTO(userDto);

        // Include product details in the final response
        return new ShoppingCartResponce(
                cartDTO.getUserId(),
                cartDTO.getCartId(),
                cartDTO.getTotalItems(),
                cartDTO.getTotalCost(),
                cartDTO.getProducts(),
                userDTO
        
        );
    }

    private ShoppingCartDTO convertToShoppingCartDTO(Cart cart) {
        // Your conversion logic from Cart entity to ShoppingCartDTO
        ShoppingCartDTO cartDTO = new ShoppingCartDTO();
        cartDTO.setUserId(cart.getUserId());
        cartDTO.setCartId(cart.getCartId());
        // Set other fields as needed
        return cartDTO;
    }

    private UserDto convertToUserDTO(UserDto userDto) {
        // Your conversion logic from UserDto to UserDTO
        UserDto userDTO = new UserDto();
        userDTO.setUserId(userDto.getUserId());
        userDTO.setUserName(userDto.getUserName());
        userDTO.setPhoneNumber(userDto.getPhoneNumber());
        userDTO.setEmail(userDto.getEmail());
        return userDTO;
    }
}


	
	
